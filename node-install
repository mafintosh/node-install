#!/bin/bash

. $(which bashkit)

opt --force,-f
opt --update,-u

CACHE_FOLDER=~/.cache
NODE_VERSIONS_CACHE=$CACHE_FOLDER/node-versions

update-versions () {
	[ $EUID = 0 ] && return 1
	mkdir -p $CACHE_FOLDER
	curl -fs http://nodejs.org/dist/ | grep v | grep -v npm | grep -v node- | sed 's|/</a>.*||' | sed 's/.*>v//' > $NODE_VERSIONS_CACHE
	[ $? != 0 ] && rm -f $NODE_VERSIONS_CACHE
}

print-help () {
	echo "usage: node-install version"
}

tab-1 () {
	if not silent find $NODE_VERSIONS_CACHE -mtime -1; then
		update-versions
	fi
	[ -e $NODE_VERSIONS_CACHE ] && cat $NODE_VERSIONS_CACHE
	echo latest
}

cmd () {
	if opt --update; then
		update-versions
		return $?
	fi

	[ $# = 0 ] && print-help && exit 1

	local version=$1
	local os=
	local arch=x86

	[ "$version" = "latest" ] && version=$(curl -fs http://nodejs.org/dist/latest/ | grep node- | head -n1 | sed 's/.*node-v//' | sed 's/-.*//')

	version=${version//v/}

	case "$(uname -a)" in
		Linux*)  os=linux  ;;
		Darwin*) os=darwin ;;
		SunOS*)  os=sunos  ;;
	esac

	case "$(uname -a)" in
		*raspberrypi*) arch=arm-pi ;;
		*x86_64*)      arch=x64    ;;
	esac

	local url=http://nodejs.org/dist/v$version/node-v$version-$os-$arch.tar.gz
	local pkg_url=http://nodejs.org/dist/v$version/node-v$version.pkg # support older node versions
	local pkg_tmp=/tmp/node-$version.pkg

	[ ! -O /usr/local/bin ] && not opt --force && [ "$(whoami)" = "root" ] && error "you are root and do not own /usr/local/bin\nuse --force to continue"
	[ ! -O /usr/local/bin ] && not opt --force && error "/usr/local/bin is not owned by you\nuse sudo and --force to continue"

	update-versions

	if ! silent curl -fsI $url; then
		if [ "$os" = "darwin" ] && silent curl -fsI $pkg_url; then
			curl -fs $pkg_url > $pkg_tmp && silent sudo installer -pkg $pkg_tmp -target / && rm -f $pkg_tmp
		else
			error cannot find node $version
		fi
	else
		if [ "$os" = "darwin" ]; then
			curl -fs $url | tar xzPs '|^[^/]*/|/usr/local/|' --include '*/*/*'
		else
			curl -fs $url | tar xzP --xform 's|^[^/]*/|/usr/local/|' --wildcards '*/*/*'
		fi
	fi

	[ $? != 0 ] && exit 1

	echo node $(node -v) is now installed
}

run
